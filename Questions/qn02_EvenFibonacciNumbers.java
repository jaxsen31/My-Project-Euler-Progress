package ProjectEuler;

import Toolbox.Fibonacci;
import Toolbox.Timer;

/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
 */
public class qn02_EvenFibonacciNumbers {
    public static void main(String[] args){
        Timer timer = new Timer();

        long sum = 0;
        long count = 2;
        while(Fibonacci.nthFibonacci(count) < 4000000L){
            //generate count-th fibonacci number while it is under 4mil
            if (Fibonacci.nthFibonacci(count) % 2 == 0) {
                //if divisible by 2 then add to sum
                sum += Fibonacci.nthFibonacci(count);
            }
            count++;
        }
        System.out.println(sum);

        timer.end();
    }
}
